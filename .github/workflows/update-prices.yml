name: MapleStory Equipment Price Auto Update

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:
    inputs:
      target_items:
        description: 'Number of items to update (default: 10)'
        default: '10'
        type: string

env:
  TZ: Asia/Tokyo

jobs:
  update-prices:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Setup Chrome and ChromeDriver
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        CHROME_VERSION=$(google-chrome --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+')
        echo "Chrome version: $CHROME_VERSION"
        
        CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d '.' -f 1)
        
        CHROMEDRIVER_JSON_URL="https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json"
        
        CHROMEDRIVER_VERSION=$(curl -s $CHROMEDRIVER_JSON_URL | python3 -c "
import sys, json
data = json.load(sys.stdin)
versions = data['versions']
chrome_major = '$CHROME_MAJOR_VERSION'
latest_version = None
for version in reversed(versions):
    if version['version'].startswith(chrome_major + '.') and 'chromedriver' in version['downloads']:
        for download in version['downloads']['chromedriver']:
            if download['platform'] == 'linux64':
                latest_version = version['version']
                break
        if latest_version:
            break
print(latest_version if latest_version else '')
")
        
        if [ -z "$CHROMEDRIVER_VERSION" ]; then
          echo "Compatible ChromeDriver not found, using fallback"
          CHROMEDRIVER_VERSION="136.0.7103.92"
        fi
        
        echo "Using ChromeDriver version: $CHROMEDRIVER_VERSION"
        
        CHROMEDRIVER_URL="https://storage.googleapis.com/chrome-for-testing-public/$CHROMEDRIVER_VERSION/linux64/chromedriver-linux64.zip"
        
        echo "Downloading from: $CHROMEDRIVER_URL"
        wget -O /tmp/chromedriver.zip "$CHROMEDRIVER_URL"
        
        sudo unzip /tmp/chromedriver.zip -d /tmp/
        sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        
        echo "Installed versions:"
        google-chrome --version
        chromedriver --version
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Update equipment prices
      run: |
        echo "Starting price update at $(date '+%Y-%m-%d %H:%M:%S JST')"
        python scripts/update_prices.py
        echo "Price update completed at $(date '+%Y-%m-%d %H:%M:%S JST')"
      env:
        TARGET_ITEMS: ${{ github.event.inputs.target_items || '10' }}
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Check for changes
      id: check-changes
      run: |
        if [ -n "$(git status --porcelain data/equipment_prices.json)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Data has been updated"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No changes in data"
        fi
    
    - name: Commit and push changes
      if: steps.check-changes.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        
        UPDATED_COUNT=$(git diff data/equipment_prices.json | grep -c '^+.*item_price' || echo "0")
        CURRENT_TIME=$(date '+%Y-%m-%d %H:%M:%S JST')
        
        git add data/equipment_prices.json
        git commit -m "Auto-update equipment prices
        
        Update time: ${CURRENT_TIME}
        Updated items: ${UPDATED_COUNT}
        Automated by GitHub Actions"
        
        git push
        
        echo "Updated ${UPDATED_COUNT} items and pushed to repository"
    
    - name: Generate summary
      run: |
        echo "## MapleStory Equipment Price Update Results" >> $GITHUB_STEP_SUMMARY
        echo "| Item | Result |" >> $GITHUB_STEP_SUMMARY
        echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Execution Time | $(date '+%Y-%m-%d %H:%M:%S JST') |" >> $GITHUB_STEP_SUMMARY
        echo "| Data Changed | ${{ steps.check-changes.outputs.changed }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Target Items | ${{ env.TARGET_ITEMS }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Workflow Run ID | ${{ github.run_id }} |" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.check-changes.outputs.changed }}" == "true" ]; then
          echo "| Status | Price update successful |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Status | No changes detected |" >> $GITHUB_STEP_SUMMARY
        fi
